"use strict";angular.module("cg.dhtmlxGrid",["cg.dhtmlxGrid.directive"]),angular.module("cg.dhtmlxGrid.directive",["cg.dhtmlxGrid.config","cg.dhtmlxGrid.service","cg.dhtmlxGrid.jsonUtil"]).directive("dhtmlxGrid",function(a,b,c,d,e,f){return{template:"<div></div><div></div>",scope:{options:"="},restrict:"E",link:function(g,h){var i={renderGrid:function(a){a.gridElement.style.height=a.height,a.gridElement.style.width=a.width,a.pagingElement.style.width=a.width;var b=new dhtmlXGridObject(a.gridElement);b.setImagePath(a.imagePath),b.enablePaging(a.paging,a.recordsPerPage,5,a.pagingElement,!0),b.setPagingSkin(a.pagingSkin),b.setSkin(a.skin),b.setHeader(a.headings),b.attachHeader(a.filters),angular.isDefined(a.sortings)?b.setColSorting(a.sortings):angular.noop,b.init(),b.parse(a.data,"json"),c(angular.element(a.gridElement).contents())(g)},remoteInitialize:function(a){var c=this,d=function(b){angular.extend(a,b.data),c.renderGrid(a,g)},e=function(){f.error("Failed to fetch data from server")};b.getData().then(d,e)},resolveLocalInitialize:function(a){angular.extend(a,g.options),angular.isUndefined(g.options.data)?this.remoteInitialize(a,g):this.resolveDataFormatAndRenderGrid(a,g)},resolveDataFormatAndRenderGrid:function(a){a.data instanceof Array?a.data={rows:d.jsonToArray(a.data)}:angular.noop,this.renderGrid(a,g)}},j={gridElement:h.children()[0],pagingElement:h.children()[1]};angular.extend(j,a),angular.isUndefined(g.options)?i.remoteInitialize(j):i.resolveLocalInitialize(j);var k={startAutoUpdate:function(){f.info("started auto update"),g.intervalPromise=e(function(){k.checkForUpdates()},j.autoUpdateInterval)},checkForUpdates:function(){f.info("checking for updates");var a=function(a){g.gridRows=a.data.data.rows.length},c=function(){f.error("Error while fetching data ")};b.getData().then(a,c)},killAutoUpdate:function(){if(f.info("killed auto update"),e.cancel(g.intervalPromise)===!1)throw"Failed to Cancel $interval"}};j.autoUpdate===!0?k.startAutoUpdate():angular.noop,g.$watch("gridRows",function(){j.autoUpdate===!0&&angular.isUndefined(g.options)?i.remoteInitialize(j):angular.noop}),g.$on("$destroy",function(){j.autoUpdate===!0?k.killAutoUpdate():angular.noop,f.info("killed auto update")})}}}),angular.module("cg.dhtmlxGrid.config",[]).factory("GridConfig",function(a){return{width:"600px",height:"300px",autoUpdate:!1,autoUpdateInterval:1e4,imagePath:"assets/imgs/",skin:"modern",pagingSkin:"bricks",paging:!0,recordsPerPage:500,getGridServiceBaseUrl:function(){if(angular.isUndefined(a.serviceBaseUrl))throw"Error ! service base url Not Found in $rootScope";return a.serviceBaseUrl+"api/GridService"}}}),angular.module("cg.dhtmlxGrid.service",["cg.dhtmlxGrid.config"]).factory("GridService",function(a,b,c){return{getData:function(){var d=a.getGridServiceBaseUrl()+c.url();return b.get(d)}}}),angular.module("cg.dhtmlxGrid.jsonUtil",[]).factory("JsonUtil",function(){return{jsonToArray:function(a){var b=[],c=0;return angular.forEach(a,function(a){var d=[];angular.forEach(a,function(a){d.push(a)}),b.push({id:c++,data:d})}),b}}});